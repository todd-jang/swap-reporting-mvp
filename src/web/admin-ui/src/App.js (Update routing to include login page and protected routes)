import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link, Navigate } from 'react-router-dom';
import { Provider } from 'react-redux';
import store from './redux/store';
import ErrorList from './components/ErrorList';
import ErrorDetail from './components/ErrorDetail';
import Dashboard from './components/Dashboard'; // Placeholder
import ProcessedDataList from './components/ProcessedDataList'; // Placeholder
import ReportsList from './components/ReportsList'; // Placeholder
import SubmissionsList from './components/SubmissionsList'; // Placeholder
import HealthStatus from './components/HealthStatus'; // Placeholder
import LoginPage from './components/LoginPage'; // Import Login Page
import './App.css'; // Main styling file

// Simple helper to check if user is authenticated (based on presence of token)
const isAuthenticated = () => {
  return sessionStorage.getItem('backend_auth_token') !== null;
};

// Protected Route Component
const ProtectedRoute = ({ element }) => {
  return isAuthenticated() ? element : <Navigate to="/login" replace />;
};


function App() {
  return (
    <Provider store={store}>
      <Router>
        <div className="app-container">
          {/* Navigation Bar (Conditionally render if authenticated) */}
          {isAuthenticated() && (
            <nav className="navbar">
              <div className="navbar-brand">Swap Reporting Admin</div>
              <ul className="navbar-nav">
                <li className="nav-item"><Link to="/" className="nav-link">Dashboard</Link></li>
                <li className="nav-item"><Link to="/errors" className="nav-link">Errors</Link></li>
                <li className="nav-item"><Link to="/processed-data" className="nav-link">Processed Data</Link></li>
                <li className="nav-item"><Link to="/reports" className="nav-link">Reports</Link></li>
                <li className="nav-item"><Link to="/submissions" className="nav-link">Submissions</Link></li>
                <li className="nav-item"><Link to="/health" className="nav-link">Health</Link></li>
                {/* TODO: Add Logout Button */}
              </ul>
            </nav>
          )}


          {/* Main Content Area with Routing */}
          <div className="main-content">
            <Routes>
              {/* Public Route for Login */}
              <Route path="/login" element={<LoginPage />} />

              {/* Protected Routes */}
              <Route path="/" element={<ProtectedRoute element={<Dashboard />} />} />
              <Route path="/errors" element={<ProtectedRoute element={<ErrorList />} />} />
              <Route path="/errors/:errorId" element={<ProtectedRoute element={<ErrorDetail />} />} />
              <Route path="/processed-data" element={<ProtectedRoute element={<ProcessedDataList />} />} />
              <Route path="/reports" element={<ProtectedRoute element={<ReportsList />} />} />
              <Route path="/submissions" element={<ProtectedRoute element={<SubmissionsList />} />} />
              <Route path="/health" element={<ProtectedRoute element={<HealthStatus />} />} />

              {/* TODO: Add a route to handle the Kakao redirect URI if frontend handles it */}
              {/* Example: <Route path="/oauth/callback" element={<KakaoCallbackHandler />} /> */}

              {/* Redirect to dashboard if authenticated, otherwise to login */}
              <Route path="*" element={<Navigate to={isAuthenticated() ? "/" : "/login"} replace />} />

            </Routes>
          </div>
        </div>
      </Router>
    </Provider>
  );
}

export default App;
